name: Nightly Lists

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 5 * * *'

jobs:
  generate-list:
    runs-on: windows-latest
    name: Generate and upload lists
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Download release
        id: download-release
        shell: powershell
        run: |
          gh release download --pattern '*.exe'
          gh release download lists --pattern '*.json'
          
          Write-Host "Launching ipfilter..."
          .\IPFilter.exe https://raw.githubusercontent.com/DavidMoore/ipfilter/lists/default/lists.json '-o:ipfilter.dat'

          Write-Host "Waiting for ipfilter to finish..."
          Wait-Process -Name ipfilter

          ls

          Write-Host "Finished"

          exit $LASTEXITCODE

      - name: Archive
        shell: powershell
        run: |
          $inputPath = ".\ipfilter.dat";
          $output= ".\ipfilter.dat.gz";

          Write-Host "Source: $inputPath"
          Write-Host "Destination: $output";

          $inputStream = New-Object System.IO.FileStream($inputPath, [System.IO.FileMode]::Open, [System.IO.FileAccess]::Read, [System.IO.FileShare]::Read);
          $outputStream = New-Object System.IO.FileStream($output, [System.IO.FileMode]::CreateNew, [System.IO.FileAccess]::Write, [System.IO.FileShare]::None);
          $gzip = New-Object System.IO.Compression.GZipStream($outputStream, [System.IO.Compression.CompressionMode]::Compress);

          try
          {
              $inputStream.CopyTo($gzip);
          }
          finally
          {
              if($gzip) { $gzip.Dispose(); }
              if($outputStream) { $outputStream.Dispose(); }
              if($inputStream) {$inputStream.Dispose(); }
          }

          Write-Host "Finished writing to: $output";
